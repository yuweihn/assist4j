<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName">
	<!-- 一主多从的redis -->

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--一个pool可分配多少个jedis实例 -->
		<property name="maxTotal" value="${redis.pool.maxTotal:1024}"/>
		
		<!--一个pool最多有多少个状态为idle(空闲)的jedis实例 -->
		<property name="maxIdle" value="${redis.pool.maxIdle:200}" />
		
		<!--获取jredis实例时最大的等待时间，超时则抛出JedisConnectionException-->
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis:10000}" />
		
		<!-- 在获取一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow:false}" />
	</bean>

	<bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master">
			<bean class="org.springframework.data.redis.connection.RedisNode">
				<property name="name" value="${redis.master.name}" />
			</bean>
		</property>
		<property name="sentinels">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel.ip}" />
					<constructor-arg name="port" value="${redis.sentinel.port}" />
				</bean>
			</set>
		</property>
	</bean>

	<bean id="jedisConnectionFactory" class="org.assist4j.data.cache.redis.JedisPoolConnFactory">
		<constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"/>
		<property name="poolConfig" ref="jedisPoolConfig"/>
		<property name="database" value="${redis.dbIndex:0}"/>
		<property name="needPassword" value="${redis.needPassword:false}"/>
		<property name="password" value="${redis.password:}"/>
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<bean id="redisCache" class="org.assist4j.data.cache.redis.RedisCache">
		<property name="redisTemplate" ref="redisTemplate"/>
	</bean>
</beans>